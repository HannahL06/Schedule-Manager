import time
import sys

def start_display():
  tasks_list = []
  while True:
    try:
      num_tasks = int(input("How many tasks would you like to enter? "))
      if num_tasks <= 0:
        print("Please enter a positive number.")
      else:
        break
    except ValueError:
      print("Please enter a valid number.")
  x = 0
  while x < num_tasks:
    task_name = input("What is your task? ")
    while True:
      try:
        task_time = int(input("About how long, in minutes, will it take? "))
        if task_time <= 0:
          print("Please enter a positive number for task time.")
        else:
          break
      except ValueError:
        print("Please enter a valid number for task time.")
    while True:
      try:
        task_diff = int(input("How difficult is your task, on a scale of one to ten (ten being the hardest) ? "))
        if not 1 <= task_diff <= 10:
          print("Please enter an integer between 1 and 10.")
        else:
          break
      except ValueError:
        print("Please enter a valid number for difficulty.")
    
    task_dict = {"task": task_name, "time": task_time, "difficulty": task_diff}
    tasks_list.append(task_dict)
    x += 1
  while True:
    try:
      order = int(input("To organise tasks by time, press 1. To organise tasks by difficulty, press 2.  "))
      if order != 1 and order != 2:
        print("please enter 1 or 2.")
      else:
        break
    except ValueError:
      print("Please enter a valid number.")
  while True:
    try:
      direction = int(input("To order tasks from greatest to least, press 1. To order tasks from least to greatest, press 2.  "))
      if direction != 1 and direction != 2:
        print("Please enter 1 or 2.")
      else:
        break
    except ValueError:
      print("Please enter a valid number.")
  if order == 1:
    task_order = "time"
  elif order == 2:
    task_order = "difficulty"
  return tasks_list, task_order, direction

def sort_tasks(tasks_list, task_order, direction):
  sorted_list = sorted(tasks_list, key=lambda x: x[task_order])
  if direction == 2:
    sorted_list.reverse()
  return sorted_list
  
def timer(task_mins):
  print(f"Starting a timer for {task_mins} minutes.")
  countdown(task_mins)
  while True:
    while True:
      try:
        more_time = int(input("If you would like more time, press 1. If you are finished this task, press 2.  "))
        if more_time != 1 and more_time != 2:
          print("Please enter 1 or 2.")
        else:
          break
      except ValueError:
        print("Please enter a valid number.")
    if more_time == 1:
      while True:
        try:
          task_mins = int(input("How much much time, in minutes, would you like to add to the timer?  "))
          if task_mins <= 0:
            print("Please enter a positive number of minutes.")
          else:
            print(f"Adding {task_mins} minutes to the timer")
            countdown(task_mins)
            break
        except ValueError:
          print("Please enter a valid number.")
    
    elif more_time == 2:
      print("Task Complete")
      break
  
def countdown(task_mins):
  task_seconds = task_mins * 60
  while task_seconds >= 0:
      minutes = task_seconds // 60
      seconds = task_seconds % 60
      sys.stdout.write("\r" + " " * 5)
      sys.stdout.flush()
      print(f"{minutes:02d} : {seconds:02d}", end="", flush=True)
      time.sleep(1)
      task_seconds -= 1
  print("\nRiiinngg - Your timer is up!")
    
    
tasks_list, task_order, direction = start_display()
sorted_list = sort_tasks(tasks_list, task_order, direction)

print("\nYour tasks are:")
for task in sorted_list:
  print(f'{task["task"]}: {task["time"]} minutes, {task["difficulty"]} difficulty')

current_task_index = 0
while current_task_index < len(sorted_list):
  start_prompt = int(input(f"Your current task is {sorted_list[current_task_index]['task']}.\nWhen you are ready to begin, press 1. "))
  if start_prompt == 1:
    task_mins = sorted_list[current_task_index]["time"]
    timer(task_mins)
    current_task_index += 1
if current_task_index == len(sorted_list):
  print("Great Job! You have completed your schedule for today.")
